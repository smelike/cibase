e.

现实世界中，我们要讲一个故事，都是一瞬间在脑中知晓（没有异步，等待时间经历的过程），例如教授死了，炸鸡啤酒女会哭得死去活来。在写代码逻辑的时候，脑中的反应也是如此，一瞬间知晓逻辑变化，if(Jiaoshou == "dead") { crying~ }, 是先知。因此，我们更乐意看到符合我们瞬时思维的代码呈现，而不是符合实际发展的代码呈现。

先知思维的代码呈现就是Promise形式；当局者思维的代码呈现就是异步回调形式。

如果套用求婚的故事，则：

先知思维（第三人称视角）——搞定岳父→搞定大伯→搞定大姑→搞定女神
当局者思维（第一人称视角）——去搞定岳父→…等待期…结果来了…→去搞定大伯→…等待期…结果来了…→去搞定大姑→…等待期…结果来了…→去搞定女神→…等待期…结果来了…
前者是先知是上帝，在规划；后者是凡人，在经历。

Codeing以及讲故事都是规划，因此，Promise这种先知形式会让代码更符合我们的认知。说白了就是更好懂，更好维护，可以怎么想就怎么写，而无需写着写着发现丫的需要嵌套需要再套一个函数做回调。




Q1：为了提升职业技能，你更喜欢哪种方式？ B

A.参加公司内部培训
B.阅读相关书籍 
C.在行业线上、线下活动中与同行交流
D. 自费报读课程学习


Q2：从职场菜鸟到如今萌生创业念头，你摸爬滚打了多少年？ C

A.3年以下
B.3-5年
C.5-10年
D. 10年以上


Q3：摸爬滚打了多年后，你现在处于哪个职位呢？ A

A.作为普通员工慢慢等待晋升机会
B.成为中层管理者，带领职场菜鸟更快地成长
C.早已是公司的CEO、CTO、COO，运筹帷幄已是日常
D.其他

Q4：你觉得自己目前的状态适合创业吗？ C

A.人财物万事皆备
B.不差钱只等机会
C.心有余而力不足
D.对创业没有很大兴趣，更适合做个上班族



下一本里，这个世界远非想象中那么功利彻骨.


把离婚的问题想明白，就不怕结婚了
——万通地产董事长冯仑
零售业的秘密全在沃尔玛的货架上
——京东集团董事长刘强东
创业初期要聚焦、聚焦再聚焦
——巨人集团董事长史玉柱


真正的问题是，信息技术的发展受到了许多更具诱惑力的、昙花一现的技术的阻碍。

新的框架、新的编程语言、无穷无尽的辩论，该怎么做这个，该怎么做那个，还有一群固执己见的人告诉你说，如果你不这样做、不那样做，你就是错的。我们被各种新鲜的事物和观点淹没。你去参加一场会议，你去读一本IT杂志，或者去看看你的推特上的时间线，你就会明白我说的是什么意思。所有的这些都比学习如何设计一个更好的系统有趣得多。

我们每五年就会丢掉我们的共同记忆（collective memory）。

据我的观察，我们大约每五年就会迎来一批新的来自大学（或者来自其它地方）的开发者。从另一个角度来看，这意味着我们每五年就会丢掉我们的共同记忆。这些人没有看过几年前开拓你眼界的那些访谈和文章。他们需要从头重新学习，向从前那些开拓信息技术的所有人学习。

使得情况更糟糕的是像功能设计这种“永恒的”话题。在信息技术中，“新的”被认为是“有价值的”，“旧的”就被认为是“无价值的”。我们正在一个快速发展的商业社会中，不是吗？五年以前、十年以前、甚至二十年以前的旧知识还有哪些价值？即便有人意识到不是所有的旧的知识都是无价值的，我们也要一遍一遍的重述然后再忽略这些知识，每年加入IT行业的新开发者们大部分都没有听说过这些知识。
